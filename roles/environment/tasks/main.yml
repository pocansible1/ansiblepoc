---
   - name: create VPC
     ec2_vpc_net:
       name:             "{{ vpc_name }}"
       cidr_block:       "{{ vpc_cidr_block }}"
       region:           "{{ aws_region }}"
       aws_access_key:   "{{ aws_access_key }}"
       aws_secret_key:   "{{ aws_secret_key }}"
       state:            "present"
     register: my_vpc
   - name:               Create Public Subnet
     ec2_vpc_subnet:
       state:            "present"
       vpc_id:           "{{ my_vpc.vpc.id }}"
       cidr:             "{{ subnet_cidr_block }}"       
       az:               "{{ aws_region }}c"
       region:           "{{ aws_region }}"
       aws_access_key:   "{{ aws_access_key }}"
       aws_secret_key:   "{{ aws_secret_key }}"
       resource_tags:
          Name:           "Public Subnet"
          #   with_items:   
          # - "{{ subnet_cidr_block1 }}"
          # - "{{ subnet_cidr_block2 }}"
     register: my_subnet
   
     # - debug:
     #  var: my_subnet
   - name:               Create Internet Gateway for VPC
     ec2_vpc_igw:
       vpc_id:           "{{ my_vpc.vpc.id }}"
       region:           "{{ aws_region }}"
       aws_access_key:   "{{ aws_access_key }}"
       aws_secret_key:   "{{ aws_secret_key }}"
       state:            "present"
     register: my_vpc_igw
   - name:               Set up public subnet route table
     ec2_vpc_route_table:
       vpc_id:           "{{ my_vpc.vpc.id }}"
       region:           "{{ aws_region }}"
       aws_access_key:   "{{ aws_access_key }}"
       aws_secret_key:   "{{ aws_secret_key }}"
       tags:
         Name:           "Public"
       subnets:          "{{ vpc_cidr_block }}"
               # - 192.168.1.0/28
               # - 192.168.1.16/28
       routes:
        - dest:         "0.0.0.0/0"
          gateway_id:   "{{ my_vpc_igw.gateway_id }}"
  
   - name:               Create Main Security Group
     ec2_group:
       name:             "POC_SG"
       description:      "My Security Group"
       vpc_id:           "{{ my_vpc.vpc.id }}"
       region:           "{{ aws_region }}"
       aws_access_key:   "{{ aws_access_key }}"
       aws_secret_key:   "{{ aws_secret_key }}"
       rules:
        - proto:        "tcp"
          from_port:    "22"
          to_port:      "22"
          cidr_ip:      "{{ my_ip }}"
        - proto:        "tcp"
          from_port:    "80"
          to_port:      "80"
          cidr_ip:      "{{ my_ip }}"
        - proto:        "tcp"
          from_port:    "443"
          to_port:      "443"
          cidr_ip:      "{{ my_ip }}"
     register: SG_results

   - name: instance creating in VPC
     ec2:
       key_name:        "{{ my_key }}"
       group:           "POC_SG"
       region:          "{{ aws_region }}"
       instance_type:   "t2.micro"
       image:           "{{ image_id }}"
       wait:            "yes"
       wait_timeout:    500
       count:           3
       instance_tags:   '{"Name":"TestServer"}'
       vpc_subnet_id:   "{{ my_subnet.subnet.id }}"
       assign_public_ip: "yes"
       aws_access_key:   "{{ aws_access_key }}"
       aws_secret_key:   "{{ aws_secret_key }}" 
     register: EC2_results    
     # - name: tomcat installation 
     #hosts: "{{ EC2_results.pulic.ip }}"

